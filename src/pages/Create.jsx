
import { useState } from 'react'
import ToneSelector from '../components/ToneSelector'

const toneMessages = {
  'Dramatique': [
    "Je pars, mais mon fant√¥me hantera encore vos r√©unions.",
    "Adieu. La vie continue‚Ä¶ pour vous.",
  ],
  'Ironique': [
    "C'√©tait‚Ä¶ une aventure. Je suppose.",
    "Merci pour tous ces moments‚Ä¶ g√™nants.",
  ],
  'Cringe': [
    "Bye bye la team, vous allez me manquer (ou pas üò¨).",
    "C'√©tait long, c'√©tait fort, c'√©tait‚Ä¶ bizarre.",
  ],
  'Classe': [
    "Merci pour tout. Je vous souhaite le meilleur.",
    "Je pars en paix, avec le sourire.",
  ],
  'Touchant': [
    "Chaque moment restera grav√© dans ma m√©moire.",
    "Merci d‚Äôavoir fait partie de mon histoire.",
  ],
  'Absurde': [
    "Je pars rejoindre un cirque de licornes.",
    "Ma mission intergalactique m'appelle. üõ∏",
  ],
  'Passif-agressif': [
    "J‚Äôaurais aim√© pouvoir dire que c‚Äô√©tait agr√©able.",
    "Bon vent √† moi-m√™me.",
  ],
  'Honn√™te': [
    "Il √©tait temps. Merci √† ceux qui ont rendu √ßa supportable.",
    "Je fais ce qu‚Äôil fallait faire.",
  ],
}

export default function Create() {
  const [tone, setTone] = useState('')
  const [message, setMessage] = useState('')

  const handleSubmit = (e) => {
    e.preventDefault()
    if (!tone || !message.trim()) {
      alert('Compl√®te tous les champs !')
      return
    }

    const id = crypto.randomUUID()
    const payload = { id, tone, message }
    localStorage.setItem(`theend-${id}`, JSON.stringify(payload))
    window.location.href = `/end/${id}`
  }

  return (
    <div className="min-h-screen p-6 bg-gradient-to-br from-black to-red-900 text-white">
      <div className="max-w-2xl mx-auto">
        <h1 className="text-4xl font-bold mb-8 text-center">Cr√©er ta page de d√©part</h1>

        <form onSubmit={handleSubmit} className="space-y-6">
          <ToneSelector selectedTone={tone} setSelectedTone={setTone} />

          {tone && (
            <button
              type="button"
              onClick={() => {
                const pool = toneMessages[tone]
                if (pool) {
                  const random = pool[Math.floor(Math.random() * pool.length)]
                  setMessage(random)
                }
              }}
              className="mb-4 px-3 py-2 bg-gray-700 text-white rounded hover:bg-gray-600 transition"
            >
              G√©n√©rer un message automatique
            </button>
          )}

          <div>
            <label className="block text-lg font-semibold mb-2">Ton message</label>
            <textarea
              value={message}
              onChange={(e) => setMessage(e.target.value)}
              rows="8"
              placeholder="Raconte ta v√©rit√©..."
              className="w-full p-4 rounded text-black"
              required
            />
          </div>

          <button
            type="submit"
            className="w-full py-3 bg-red-600 hover:bg-red-700 text-white font-bold rounded"
          >
            G√©n√©rer ma page üí•
          </button>
        </form>
      </div>
    </div>
  )
}
